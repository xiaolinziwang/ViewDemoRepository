问：java中hashCode()的作用是什么？
答：hashCode()的作用是为了提高在散列结构存储中查找的效率，在线性表中没有意义；
java有一些集合类（HashSet）中想要保证元素不重复，可以在每一次增加一个元素 就通过对象的equals方法比较一次，
如果有5000个元素，那么需要比较5000次，于是java采用了哈希表的原理，当集合要添加新元素时，会先调用这个元素的
hashcode方法，就一下子能定位到她该放置的物理位置上(实际可能并不是)，如果这个位置上有新元素了，就调用equals()机型比较，
如果相同了，就不存；不同就散列其他位置；也就是说，散列结构地址不连续，也没有指针，不是链表；而hashcode的值对于每一个对象实
列来说，是固定的值；我猜，堆估计就是散列的

问：java中为什么重写equals(xxx)方法时，尽量要重写hashCode()方法？
答：相等对象必须具有相等的hashcode。
 自定义类重写equals方法是用来进行等值比较，重写compareTo()方法是用来进行不同对象大小比较，而重写hashCode（）是为了将数据存入
HashSet、HashMap\HashTable等基于哈希表的集合类时进行高效比较；



